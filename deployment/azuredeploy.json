{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "siteName": { "type": "string", "metadata": { "description": "Base name of the Web App. A unique suffix will be added." } },
    "location": { "type": "string", "defaultValue": "[resourceGroup().location]", "metadata": { "description": "Location for all resources." } },
    "skuName": { "type": "string", "defaultValue": "B1", "allowedValues": ["B1","B2","B3","S1","S2","S3","P1v2","P2v2","P3v2"] },
    "nodeVersion": { "type": "string", "defaultValue": "~20", "allowedValues": ["~18","~20"] },
    "tenantId": { "type": "string", "metadata": { "description": "Tenant ID of the Azure AD where the app registration exists." } },
    "clientId": { "type": "string", "metadata": { "description": "Client ID of the pre-created app registration." } },
    "clientSecret": { "type": "securestring", "metadata": { "description": "Client Secret of the app registration." } }
  },
  "variables": {
    "uniqueSuffix": "[uniqueString(resourceGroup().id)]",
    "hostingPlanName": "[concat('asp-', parameters('siteName'), '-', variables('uniqueSuffix'))]",
    "webAppName": "[concat('app-', parameters('siteName'), '-', variables('uniqueSuffix'))]",
    "functionAppName": "[concat('func-', parameters('siteName'), '-', variables('uniqueSuffix'))]",
    "cosmosAccountName": "[concat('cosmos-', parameters('siteName'), '-', variables('uniqueSuffix'))]",
    "cosmosDbName": "watchtra",
    "cosmosContainerName": "scanResults",
    "storageAccountName": "[toLower(concat('st', uniqueString(resourceGroup().id)))]",
    "webZipUrl": "https://watchtra.blob.core.windows.net/releases/webapp-v1.0.zip?sp=rl&st=2025-09-16T08:09:51Z&se=2025-09-30T16:24:51Z&spr=https&sv=2024-11-04&sr=c&sig=GUy58RLeaGW7Ww02KbtFR%2BJC4eHqgyjK7VJH7JCel5w%3D",
    "functionZipUrl": "https://watchtra.blob.core.windows.net/releases/function-v1.0.zip?sp=rl&st=2025-09-16T08:09:51Z&se=2025-09-30T16:24:51Z&spr=https&sv=2024-11-04&sr=c&sig=GUy58RLeaGW7Ww02KbtFR%2BJC4eHqgyjK7VJH7JCel5w%3D"
  },
  "resources": [
      {
        "type": "Microsoft.Storage/storageAccounts",
        "apiVersion": "2023-01-01",
        "name": "[variables('storageAccountName')]",
        "location": "[parameters('location')]",
        "sku": { "name": "Standard_LRS" },
        "kind": "StorageV2",
        "properties": {}
      },
      {
        "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
        "apiVersion": "2022-09-01",
        "name": "[concat(variables('storageAccountName'), '/default/watchtra')]",
        "dependsOn": [
          "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
        ],
        "properties": { "publicAccess": "None" }
      },
      {
        "type": "Microsoft.Resources/deploymentScripts",
        "apiVersion": "2020-10-01",
        "name": "UploadJsonFiles",
        "location": "[parameters('location')]",
        "dependsOn": [
          "[resourceId('Microsoft.Storage/storageAccounts/blobServices/containers', variables('storageAccountName'), 'default', 'watchtra')]"
        ],
        "kind": "AzureCLI",
        "properties": {
          "azCliVersion": "2.50.0",
          "timeout": "PT15M",
          "retentionInterval": "PT1H",
          "environmentVariables": [
            {
              "name": "STORAGE_KEY",
              "value": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2023-01-01').keys[0].value]"
            },
            {
              "name": "STORAGE_ACCOUNT",
              "value": "[variables('storageAccountName')]"
            }
          ],
          "scriptContent": "curl -L -o members.json https://raw.githubusercontent.com/nicowyss/watchtra/refs/heads/main/webapp/app/rules/members.json && az storage blob upload --account-name $STORAGE_ACCOUNT --account-key $STORAGE_KEY --container-name watchtra --name members.json --file members.json && curl -L -o guests.json https://raw.githubusercontent.com/nicowyss/watchtra/refs/heads/main/webapp/app/rules/guests.json && az storage blob upload --account-name $STORAGE_ACCOUNT --account-key $STORAGE_KEY --container-name watchtra --name guests.json --file guests.json"
        }
      },
      {
      "type": "Microsoft.DocumentDB/databaseAccounts",
      "apiVersion": "2021-10-15",
      "name": "[variables('cosmosAccountName')]",
      "location": "[parameters('location')]",
      "kind": "GlobalDocumentDB",
      "properties": {
        "databaseAccountOfferType": "Standard",
        "locations": [
          {
            "locationName": "[parameters('location')]",
            "failoverPriority": 0
          }
        ]
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
      "apiVersion": "2021-10-15",
      "name": "[concat(variables('cosmosAccountName'), '/', variables('cosmosDbName'))]",
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosAccountName'))]"
      ],
      "properties": {
        "resource": { "id": "[variables('cosmosDbName')]" }
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
      "apiVersion": "2021-10-15",
      "name": "[concat(variables('cosmosAccountName'), '/', variables('cosmosDbName'), '/', variables('cosmosContainerName'))]",
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', variables('cosmosAccountName'), variables('cosmosDbName'))]"
      ],
      "properties": {
        "resource": {
          "id": "[variables('cosmosContainerName')]",
          "partitionKey": {
            "paths": ["/id"],
            "kind": "Hash"
          }
        }
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2021-03-01",
      "name": "[variables('hostingPlanName')]",
      "location": "[parameters('location')]",
      "sku": { "name": "[parameters('skuName')]", "capacity": 1 },
      "properties": { "reserved": true }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2021-03-01",
      "name": "[variables('webAppName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices/containers', variables('storageAccountName'), 'default', 'watchtra')]",
        "[resourceId('Microsoft.Web/sites', variables('functionAppName'))]"
      ],
      "kind": "app,linux",
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "alwaysOn": true,
        "siteConfig": {
          "linuxFxVersion": "[concat('NODE|', parameters('nodeVersion'))]",
          "appCommandLine": "npx serve -s /home/site/wwwroot -l 8080",
          "appSettings": [
            { "name": "TENANT_ID", "value": "[parameters('tenantId')]" },
            { "name": "CLIENT_ID", "value": "[parameters('clientId')]" },
            { "name": "CLIENT_SECRET", "value": "[parameters('clientSecret')]" },
            { "name": "WEBSITE_RUN_FROM_PACKAGE", "value": "[variables('webZipUrl')]" },
            { "name": "STORAGE_ACCOUNT_NAME", "value": "[variables('storageAccountName')]" },
            { "name": "STORAGE_CONTAINER_NAME", "value": "watchtra" },
            { "name": "STORAGE_SAS_TOKEN", "value": "[listAccountSas(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2023-01-01', json('{\"signedServices\":\"b\",\"signedResourceTypes\":\"co\",\"signedPermission\":\"rlcw\",\"signedProtocol\":\"https\",\"signedExpiry\":\"2026-09-17T00:00:00Z\"}')).accountSasToken]"}
          ]
        },
        "httpsOnly": true
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2021-03-01",
      "name": "[variables('functionAppName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosAccountName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices/containers', variables('storageAccountName'), 'default', 'watchtra')]"
      ],
      "kind": "functionapp,linux",
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "alwaysOn": true,
        "siteConfig": {
        "linuxFxVersion": "[concat('NODE|', replace(parameters('nodeVersion'), '~', ''))]",
          "appSettings": [
            { "name": "FUNCTIONS_WORKER_RUNTIME", "value": "node" },
            { "name": "FUNCTIONS_EXTENSION_VERSION", "value": "~4" },
            { "name": "TENANT_ID", "value": "[parameters('tenantId')]" },
            { "name": "CLIENT_ID", "value": "[parameters('clientId')]" },
            { "name": "CLIENT_SECRET", "value": "[parameters('clientSecret')]" },
            { "name": "WEBSITE_RUN_FROM_PACKAGE", "value": "[variables('functionZipUrl')]" },
            { "name": "COSMOS_ENDPOINT", "value": "[reference(resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosAccountName'))).documentEndpoint]" },
            { "name": "COSMOS_KEY", "value": "[listKeys(resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosAccountName')), '2021-10-15').primaryMasterKey]" },
            { "name": "STORAGE_ACCOUNT_NAME", "value": "[variables('storageAccountName')]" },
            { "name": "STORAGE_CONTAINER_NAME", "value": "watchtra" },
            { "name": "STORAGE_SAS_TOKEN", "value": "[listAccountSas(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2023-01-01', json('{\"signedServices\":\"b\",\"signedResourceTypes\":\"co\",\"signedPermission\":\"rlcw\",\"signedProtocol\":\"https\",\"signedExpiry\":\"2026-09-17T00:00:00Z\"}')).accountSasToken]"}

          ]
        },
        "httpsOnly": true
      }
    }
  ],
  "outputs": {
    "webAppUrl": { "type": "string", "value": "[concat('https://', variables('webAppName'), '.azurewebsites.net')]" },
    "functionAppName": { "type": "string", "value": "[variables('functionAppName')]" },
    "cosmosEndpoint": { "type": "string", "value": "[reference(resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosAccountName'))).documentEndpoint]" }
  }
}
